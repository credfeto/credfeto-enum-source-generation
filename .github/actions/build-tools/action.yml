--- # Build and deploy packages
name: 'Install dotnet and build tools'
description: 'Install dotnet and build tools'
inputs:
  # GENERAL
  GITHUB_TOKEN:
    description: 'Github Token'
    required: true

  # NUGET
  NUGET_ADDITIONAL_RESTORE_FEED_RELEASE_CACHE:
    description: 'Any additional nuget feed to download packages from'
    required: false
  NUGET_ADDITIONAL_RESTORE_FEED_PRERELEASE_CACHE:
    description: 'Any additional nuget feed to download packages from'
    required: false
  NUGET_ADDITIONAL_RESTORE_FEED_RELEASE:
    description: 'Any additional nuget feed to download packages from'
    required: false
  NUGET_ADDITIONAL_RESTORE_FEED_PRERELEASE:
    description: 'Any additional nuget feed to download packages from'
    required: false

runs:
  using: "composite"
  steps:

  - name: Determine .net core version
    uses: credfeto/action-dotnet-version-detect@v1.3.0
    with:
      file: src/global.json
      fallback: 7.0.*

  - name: "Explicitly kill any existing dotnet"
    run: rm -fr "${{github.workspace}}/.dotnet"
    shell: bash

  - name: Setup .NET Core
    uses: actions/setup-dotnet@v3
    env:
      GITHUB_TOKEN: ${{inputs.GITHUB_TOKEN}}
      DOTNET_ROOT: "${{github.workspace}}/.dotnet/${{github.sha}}-${{github.run_id}}-${{github.run_number}}-${{github.run_attempt}}"
      DOTNET_INSTALL_DIR: "${{github.workspace}}/.dotnet/${{github.sha}}-${{github.run_id}}-${{github.run_number}}-${{github.run_attempt}}"
      DOTNET_MULTILEVEL_LOOKUP: "false"
      DOTNET_NOLOGO: "true"
      DOTNET_PRINT_TELEMETRY_MESSAGE: "false"
      DOTNET_ReadyToRun: "0"
      DOTNET_TC_QuickJitForLoops: "1"
      DOTNET_TieredPGO: "1"
    with:
      dotnet-version: |
          6.0.*
          7.0.*
          ${{env.DOTNET_VERSION}}

  - name: "List current nuget feeds (before)"
    shell: bash
    run: |
      echo "List current nuget feeds (before)"
      dotnet nuget list source

  - name: "Dotnet: Remove optional nuget feed (Additional1Cache) if it exists"
    shell: bash
    run: |
      echo "Removing Additional1Cache NuGet Feed"
      [ "$(dotnet nuget list source | grep Additional1Cache | tr -s ' ' | cut -d ' ' -f 3)" == "Additional1Cache" ] && dotnet nuget remove source Additional1Cache || echo "Additional1Cache NuGet Feed is Not Registered"

  - name: "Dotnet: Remove optional nuget feed (Additional2Cache) if it exists"
    shell: bash
    run: |
      echo "Removing Additional2Cache NuGet Feed"
      [ "$(dotnet nuget list source | grep Additional2Cache | tr -s ' ' | cut -d ' ' -f 3)" == "Additional2Cache" ] && dotnet nuget remove source Additional2Cache || echo "Additional2Cache NuGet Feed is Not Registered"

  - name: "Dotnet: Remove optional nuget feed (Additional1) if it exists"
    shell: bash
    run: |
      echo "Removing Additional1 NuGet Feed"
      [ "$(dotnet nuget list source | grep Additional1 | tr -s ' ' | cut -d ' ' -f 3)" == "Additional1" ] && dotnet nuget remove source Additional1 || echo "Additional1 NuGet Feed is Not Registered"

  - name: "Dotnet: Remove optional nuget feed (Additional2) if it exists"
    shell: bash
    run: |
      echo "Removing Additional2 NuGet Feed"
      [ "$(dotnet nuget list source | grep Additional2 | tr -s ' ' | cut -d ' ' -f 3)" == "Additional2" ] && dotnet nuget remove source Additional2 || echo "Additional2 NuGet Feed is Not Registered"

  - if: ${{inputs.NUGET_ADDITIONAL_RESTORE_FEED_RELEASE_CACHE != ''}}
    name: "Dotnet: Add optional nuget feed (Additional1Cache)"
    shell: bash
    run: |
      echo "Adding Additional1Cache NuGet feed..."
      dotnet nuget add source --name Additional1Cache "${{inputs.NUGET_ADDITIONAL_RESTORE_FEED_RELEASE_CACHE}}"

  - if: ${{inputs.NUGET_ADDITIONAL_RESTORE_FEED_PRERELEASE_CACHE != ''}}
    name: "Dotnet: Add optional nuget feed (Additional2Cache)"
    shell: bash
    run: |
      echo "Adding Additional2Cache NuGet feed..."
      dotnet nuget add source --name Additional2Cache "${{inputs.NUGET_ADDITIONAL_RESTORE_FEED_PRERELEASE_CACHE}}"


  - if: ${{inputs.NUGET_ADDITIONAL_RESTORE_FEED_RELEASE != ''}}
    name: "Dotnet: Add optional nuget feed (Additional1)"
    shell: bash
    run: |
      echo "Adding Additional1 NuGet feed..."
      dotnet nuget add source --name Additional1 "${{inputs.NUGET_ADDITIONAL_RESTORE_FEED_RELEASE}}"

  - if: ${{inputs.NUGET_ADDITIONAL_RESTORE_FEED_PRERELEASE != ''}}
    name: "Dotnet: Add optional nuget feed (Additional2)"
    shell: bash
    run: |
      echo "Adding Additional2 NuGet feed..."
      dotnet nuget add source --name Additional2 "${{inputs.NUGET_ADDITIONAL_RESTORE_FEED_PRERELEASE}}"

  - name: "Dotnet: Show sources (After)"
    shell: bash
    run: |
      echo "List current nuget feeds (after)"
      dotnet nuget list source

  - name: Enable dotnet tools
    shell: bash
    run: |
      [ ! -f .config/dotnet-tools.json ] && dotnet new tool-manifest
      dotnet tool restore || true
    env:
      DOTNET_ROOT: "${{github.workspace}}/.dotnet/${{github.sha}}-${{github.run_id}}-${{github.run_number}}-${{github.run_attempt}}"
      DOTNET_INSTALL_DIR: "${{github.workspace}}/.dotnet/${{github.sha}}-${{github.run_id}}-${{github.run_number}}-${{github.run_attempt}}"
      DOTNET_MULTILEVEL_LOOKUP: "false"
      DOTNET_NOLOGO: "true"
      DOTNET_PRINT_TELEMETRY_MESSAGE: "false"
      DOTNET_ReadyToRun: "0"
      DOTNET_TC_QuickJitForLoops: "1"
      DOTNET_TieredPGO: "1"

  - name: Install Sleet package management tool
    shell: bash
    run: dotnet tool install --local Sleet
    env:
      DOTNET_ROOT: "${{github.workspace}}/.dotnet/${{github.sha}}-${{github.run_id}}-${{github.run_number}}-${{github.run_attempt}}"
      DOTNET_INSTALL_DIR: "${{github.workspace}}/.dotnet/${{github.sha}}-${{github.run_id}}-${{github.run_number}}-${{github.run_attempt}}"
      DOTNET_MULTILEVEL_LOOKUP: "false"
      DOTNET_NOLOGO: "true"
      DOTNET_PRINT_TELEMETRY_MESSAGE: "false"
      DOTNET_ReadyToRun: "0"
      DOTNET_TC_QuickJitForLoops: "1"
      DOTNET_TieredPGO: "1"

  - name: Install Build Version Tool
    shell: bash
    run: dotnet tool install --local FunFair.BuildVersion
    env:
      DOTNET_ROOT: "${{github.workspace}}/.dotnet/${{github.sha}}-${{github.run_id}}-${{github.run_number}}-${{github.run_attempt}}"
      DOTNET_INSTALL_DIR: "${{github.workspace}}/.dotnet/${{github.sha}}-${{github.run_id}}-${{github.run_number}}-${{github.run_attempt}}"
      DOTNET_MULTILEVEL_LOOKUP: "false"
      DOTNET_NOLOGO: "true"
      DOTNET_PRINT_TELEMETRY_MESSAGE: "false"
      DOTNET_ReadyToRun: "0"
      DOTNET_TC_QuickJitForLoops: "1"
      DOTNET_TieredPGO: "1"

  - name: Install Changelog Tool
    shell: bash
    run: dotnet tool install --local Credfeto.Changelog.Cmd
    env:
      DOTNET_ROOT: "${{github.workspace}}/.dotnet/${{github.sha}}-${{github.run_id}}-${{github.run_number}}-${{github.run_attempt}}"
      DOTNET_INSTALL_DIR: "${{github.workspace}}/.dotnet/${{github.sha}}-${{github.run_id}}-${{github.run_number}}-${{github.run_attempt}}"
      DOTNET_MULTILEVEL_LOOKUP: "false"
      DOTNET_NOLOGO: "true"
      DOTNET_PRINT_TELEMETRY_MESSAGE: "false"
      DOTNET_ReadyToRun: "0"
      DOTNET_TC_QuickJitForLoops: "1"
      DOTNET_TieredPGO: "1"
