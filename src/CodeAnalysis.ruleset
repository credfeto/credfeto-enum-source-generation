<?xml version="1.0" encoding="utf-8"?>
<RuleSet Name="Custom Rulset" Description="Custom Rulset" ToolsVersion="15.0">
    <Rules AnalyzerId="Microsoft.Analyzers.ManagedCodeAnalysis" RuleNamespace="Microsoft.Rules.Managed">
        <!-- CA1001 - ?? -->
        <Rule Id="CA1001" Action="None"/>
        <!-- CA1002 - ?? -->
        <Rule Id="CA1002" Action="None"/>
        <!-- CA1003 - ?? -->
        <Rule Id="CA1003" Action="Error"/>
        <!-- CA1005 - ?? -->
        <Rule Id="CA1005" Action="None"/>
        <!-- C1A008 - Flags Enum should have an enum called 'None' with a value 0 -->
        <Rule Id="CA1008" Action="None"/>
        <!-- CA1009 - ?? -->
        <Rule Id="CA1009" Action="Error"/>
        <!-- CA1012 - ?? -->
        <Rule Id="CA1012" Action="Error"/>
        <!-- CA1014 - ?? -->
        <Rule Id="CA1014" Action="None"/>
        <!-- CA1016 - ?? -->
        <Rule Id="CA1016" Action="Error"/>
        <!-- CA1018 - ?? -->
        <Rule Id="CA1018" Action="Error"/>
        <!-- CA1019 - ?? -->
        <Rule Id="CA1019" Action="None"/>
        <!-- CA1025 - ?? -->
        <Rule Id="CA1025" Action="Error"/>
        <!-- CA1027 - ?? -->
        <Rule Id="CA1027" Action="None"/>
        <!-- CA1028 - ?? -->
        <Rule Id="CA1028" Action="Error"/>
        <!-- CA1030 - ?? -->
        <Rule Id="CA1030" Action="None"/>
        <!-- CA1031 - ?? -->
        <Rule Id="CA1031" Action="None"/>
        <!-- CA1033 - ?? -->
        <Rule Id="CA1033" Action="None"/>
        <!-- CA1034 - ?? -->
        <Rule Id="CA1034" Action="Error"/>
        <!-- CA1036 - ?? -->
        <Rule Id="CA1036" Action="Error"/>
        <!-- CA1040 - ?? -->
        <Rule Id="CA1040" Action="None"/>
        <!-- CA1041 - ?? -->
        <Rule Id="CA1041" Action="Error"/>
        <!-- CA1043 - ?? -->
        <Rule Id="CA1043" Action="Error"/>
        <!-- CA1044 - ?? -->
        <Rule Id="CA1044" Action="Error"/>
        <!-- CA1047 - ?? -->
        <Rule Id="CA1047" Action="Error"/>
        <!-- CA1048 - ?? -->
        <Rule Id="CA1048" Action="Error"/>
        <!-- CA1049 - ?? -->
        <Rule Id="CA1049" Action="Error"/>
        <!-- CA1050 - ?? -->
        <Rule Id="CA1050" Action="Error"/>
        <!-- CA1051 - ?? -->
        <Rule Id="CA1051" Action="Error"/>
        <!-- CA1052 - ?? -->
        <Rule Id="CA1052" Action="Error"/>
        <!-- CA1053 - ?? -->
        <Rule Id="CA1053" Action="Error"/>
        <!-- CA1054 - ?? -->
        <Rule Id="CA1054" Action="None"/>
        <!-- CA1055 - ?? -->
        <Rule Id="CA1055" Action="Error"/>
        <!-- CA1056 - ?? -->
        <Rule Id="CA1056" Action="Error"/>
        <!-- CA1057 - ?? -->
        <Rule Id="CA1057" Action="Error"/>
        <!-- CA1058 - ?? -->
        <Rule Id="CA1058" Action="Error"/>
        <!-- CA1059 - ?? -->
        <Rule Id="CA1059" Action="Error"/>
        <!-- CA1060 - ?? -->
        <Rule Id="CA1060" Action="Error"/>
        <!-- CA1061 - ?? -->
        <Rule Id="CA1061" Action="Error"/>
        <!-- CA1062 - ?? -->
        <Rule Id="CA1062" Action="None"/>
        <!-- CA1063 - ?? -->
        <Rule Id="CA1063" Action="Error"/>
        <!-- CA1064 - ?? -->
        <Rule Id="CA1064" Action="Error"/>
        <!-- CA1065 - ?? -->
        <Rule Id="CA1065" Action="Error"/>
        <!-- CA1301 - ?? -->
        <Rule Id="CA1301" Action="Error"/>
        <!-- CA1303 - ?? -->
        <Rule Id="CA1303" Action="None"/>
        <!-- CA1305 - ?? -->
        <Rule Id="CA1305" Action="None"/>
        <!-- CA1306 - ?? -->
        <Rule Id="CA1306" Action="Error"/>
        <!-- CA1307 - ?? -->
        <Rule Id="CA1307" Action="None"/>
        <!-- CA1308 - ?? -->
        <Rule Id="CA1308" Action="None"/>
        <!-- CA1309 - ?? -->
        <Rule Id="CA1309" Action="Error"/>
        <!-- CA1400 - ?? -->
        <Rule Id="CA1400" Action="Error"/>
        <!-- CA1401 - ?? -->
        <Rule Id="CA1401" Action="Error"/>
        <!-- CA1403 - ?? -->
        <Rule Id="CA1403" Action="Error"/>
        <!-- CA1403 - ?? -->
        <Rule Id="CA1404" Action="Error"/>
        <!-- CA1405 - ?? -->
        <Rule Id="CA1405" Action="Error"/>
        <!-- CA1410 - ?? -->
        <Rule Id="CA1410" Action="Error"/>
        <!-- CA1415 - ?? -->
        <Rule Id="CA1415" Action="Error"/>
        <!-- CA1501 - ?? -->
        <Rule Id="CA1501" Action="None"/>
        <!-- CA1502 - ?? -->
        <Rule Id="CA1502" Action="Error"/>
        <!-- CA1504 - ?? -->
        <Rule Id="CA1504" Action="Error"/>
        <!-- CA1505 - ?? -->
        <Rule Id="CA1505" Action="Error"/>
        <!-- CA1506 - ?? -->
        <Rule Id="CA1506" Action="None"/>
        <!-- CA1600 - ?? -->
        <Rule Id="CA1600" Action="Error"/>
        <!-- CA1601 - ?? -->
        <Rule Id="CA1601" Action="Error"/>
        <!-- CA1700 - ?? -->
        <Rule Id="CA1700" Action="Error"/>
        <!-- CA1707 - ?? -->
        <Rule Id="CA1707" Action="None"/>
        <!-- CA1710 - ?? -->
        <Rule Id="CA1710" Action="None"/>
        <!-- CA1712 - ?? -->
        <Rule Id="CA1712" Action="None"/>
        <!-- CA1716 - ?? -->
        <Rule Id="CA1716" Action="None"/>
        <!-- CA1717 - ?? -->
        <Rule Id="CA1717" Action="None"/>
        <!-- CA1724 - ?? -->
        <Rule Id="CA1724" Action="None"/>
        <!-- CA1800 - ?? -->
        <Rule Id="CA1800" Action="Error"/>
        <!-- CA1801 - ?? -->
        <Rule Id="CA1801" Action="Error"/>
        <!-- CA1802 - ?? -->
        <Rule Id="CA1802" Action="Error"/>
        <!-- CA1803 - ?? -->
        <Rule Id="CA1803" Action="Error"/>
        <!-- CA1804 - ?? -->
        <Rule Id="CA1804" Action="Error"/>
        <!-- CA1805 - ?? -->
        <Rule Id="CA1805" Action="Error"/>
        <!-- CA1806 - ?? -->
        <Rule Id="CA1806" Action="Error"/>
        <!-- CA1807 - ?? -->
        <Rule Id="CA1807" Action="Error"/>
        <!-- CA1808 - ?? -->
        <Rule Id="CA1808" Action="Error"/>
        <!-- CA1809 - ?? -->
        <Rule Id="CA1809" Action="Error"/>
        <!-- CA1810 - ?? -->
        <Rule Id="CA1810" Action="Error"/>
        <!-- CA1811 - ?? -->
        <Rule Id="CA1811" Action="Error"/>
        <!-- CA1812 - ?? -->
        <Rule Id="CA1812" Action="Error"/>
        <!-- CA1813 - ?? -->
        <Rule Id="CA1813" Action="Error"/>
        <!-- CA1814 - ?? -->
        <Rule Id="CA1814" Action="Error"/>
        <!-- CA1815 - ?? -->
        <Rule Id="CA1815" Action="Error"/>
        <!-- CA1816 - ?? -->
        <Rule Id="CA1816" Action="Error"/>
        <!-- CA1819 - ?? -->
        <Rule Id="CA1819" Action="None"/>
        <!-- CA1820 - ?? -->
        <Rule Id="CA1820" Action="Error"/>
        <!-- CA1821 - ?? -->
        <Rule Id="CA1821" Action="Error"/>
        <!-- CA1822 - ?? -->
        <Rule Id="CA1822" Action="Error"/>
        <!-- CA1823 - ?? -->
        <Rule Id="CA1823" Action="Error"/>
        <!-- CA1826 - ?? -->
        <Rule Id="CA1826" Action="None"/>
        <!-- CA1848 - For improved performance, use the LoggerMessage delegates instead of calling 'LoggerExtensions.LogXXX(ILogger, string?, params object?[])' -->
        <!-- TODO: Review whethere there's a better way of doing this that keeps the code readable -->
        <Rule Id="CA1848" Action="None"/>
        <!-- CA1900 - ?? -->
        <Rule Id="CA1900" Action="Error"/>
        <!-- CA1901 - ?? -->
        <Rule Id="CA1901" Action="Error"/>
        <!-- CA2000 - ?? -->
        <Rule Id="CA2000" Action="Error"/>
        <!-- CA2001 - ?? -->
        <Rule Id="CA2001" Action="Error"/>
        <!-- CA2002 - ?? -->
        <Rule Id="CA2002" Action="Error"/>
        <!-- CA2003 - ?? -->
        <Rule Id="CA2003" Action="Error"/>
        <!-- CA2004 - ?? -->
        <Rule Id="CA2004" Action="Error"/>
        <!-- CA2006 - ?? -->
        <Rule Id="CA2006" Action="Error"/>
        <!-- CA2007 - ?? -->
        <Rule Id="CA2007" Action="None"/>
        <!-- CA2008 - ?? -->
        <Rule Id="CA2008" Action="None"/>
        <!-- CA2100 - ?? -->
        <Rule Id="CA2100" Action="Error"/>
        <!-- CA2101 - ?? -->
        <Rule Id="CA2101" Action="Error"/>
        <!-- CA2108 - ?? -->
        <Rule Id="CA2108" Action="Error"/>
        <!-- CA2111 - ?? -->
        <Rule Id="CA2111" Action="Error"/>
        <!-- CA2112 - ?? -->
        <Rule Id="CA2112" Action="Error"/>
        <!-- CA2114 - ?? -->
        <Rule Id="CA2114" Action="Error"/>
        <!-- CA2116 - ?? -->
        <Rule Id="CA2116" Action="Error"/>
        <!-- CA2117 - ?? -->
        <Rule Id="CA2117" Action="Error"/>
        <!-- CA2119 - ?? -->
        <Rule Id="CA2119" Action="Error"/>
        <!-- CA2121 - ?? -->
        <Rule Id="CA2121" Action="Error"/>
        <!-- CA2122 - ?? -->
        <Rule Id="CA2122" Action="Error"/>
        <!-- CA2123 - ?? -->
        <Rule Id="CA2123" Action="Error"/>
        <!-- CA2124 - ?? -->
        <Rule Id="CA2124" Action="Error"/>
        <!-- CA2126 - ?? -->
        <Rule Id="CA2126" Action="Error"/>
        <!-- CA2131 - ?? -->
        <Rule Id="CA2131" Action="Error"/>
        <!-- CA2132 - ?? -->
        <Rule Id="CA2132" Action="Error"/>
        <!-- CA2133 - ?? -->
        <Rule Id="CA2133" Action="Error"/>
        <!-- CA2134 - ?? -->
        <Rule Id="CA2134" Action="Error"/>
        <!-- CA2137- ?? -->
        <Rule Id="CA2137" Action="Error"/>
        <!-- CA2138 - ?? -->
        <Rule Id="CA2138" Action="Error"/>
        <!-- CA2140 - ?? -->
        <Rule Id="CA2140" Action="Error"/>
        <!-- CA2141 - ?? -->
        <Rule Id="CA2141" Action="Error"/>
        <!-- CA2146 - ?? -->
        <Rule Id="CA2146" Action="Error"/>
        <!-- CA2147 - ?? -->
        <Rule Id="CA2147" Action="Error"/>
        <!-- CA2149 - ?? -->
        <Rule Id="CA2149" Action="Error"/>
        <!-- CA2200 - ?? -->
        <Rule Id="CA2200" Action="Error"/>
        <!-- CA2201 - ?? -->
        <Rule Id="CA2201" Action="Error"/>
        <!-- CA2202 - ?? -->
        <Rule Id="CA2202" Action="Error"/>
        <!-- CA2205 - ?? -->
        <Rule Id="CA2205" Action="Error"/>
        <!-- CA2207 - ?? -->
        <Rule Id="CA2207" Action="Error"/>
        <!-- CA2208 - ?? -->
        <Rule Id="CA2208" Action="Error"/>
        <!-- CA2211 - ?? -->
        <Rule Id="CA2211" Action="Error"/>
        <!-- CA2212 - ?? -->
        <Rule Id="CA2212" Action="Error"/>
        <!-- CA2213 - ?? -->
        <Rule Id="CA2213" Action="Error"/>
        <!-- CA2214 - ?? -->
        <Rule Id="CA2214" Action="Error"/>
        <!-- CA2215 - ?? -->
        <Rule Id="CA2215" Action="Error"/>
        <!-- CA2216 - ?? -->
        <Rule Id="CA2216" Action="Error"/>
        <!-- CA2217 - ?? -->
        <Rule Id="CA2217" Action="None"/>
        <!-- CA2218 - ?? -->
        <Rule Id="CA2218" Action="Error"/>
        <!-- CA2219 - ?? -->
        <Rule Id="CA2219" Action="Error"/>
        <!-- CA2220 - ?? -->
        <Rule Id="CA2220" Action="Error"/>
        <!-- CA2221 - ?? -->
        <Rule Id="CA2221" Action="Error"/>
        <!-- CA2224 - ?? -->
        <Rule Id="CA2224" Action="Error"/>
        <!-- CA2225 - ?? -->
        <Rule Id="CA2225" Action="None"/>
        <!-- CA2226 - ?? -->
        <Rule Id="CA2226" Action="Error"/>
        <!-- CA2227 - ?? -->
        <Rule Id="CA2227" Action="None"/>
        <!-- CA2229 - ?? -->
        <Rule Id="CA2229" Action="Error"/>
        <!-- CA2230 - ?? -->
        <Rule Id="CA2230" Action="Error"/>
        <!-- CA2231 - ?? -->
        <Rule Id="CA2231" Action="Error"/>
        <!-- CA2232 - ?? -->
        <Rule Id="CA2232" Action="Error"/>
        <!-- CA2233 - ?? -->
        <Rule Id="CA2233" Action="Error"/>
        <!-- CA2234 - ?? -->
        <Rule Id="CA2234" Action="Error"/>
        <!-- CA2235 - ?? -->
        <Rule Id="CA2235" Action="Error"/>
        <!-- CA2236 - ?? -->
        <Rule Id="CA2236" Action="Error"/>
        <!-- CA2237 - ?? -->
        <Rule Id="CA2237" Action="Error"/>
        <!-- CA2238 - ?? -->
        <Rule Id="CA2238" Action="Error"/>
        <!-- CA2240 - ?? -->
        <Rule Id="CA2240" Action="Error"/>
        <!-- CA2241 - ?? -->
        <Rule Id="CA2241" Action="Error"/>
        <!-- CA2242 - ?? -->
        <Rule Id="CA2242" Action="Error"/>
        <!-- CA2254 The logging message template should not vary between calls to 'LoggerExtensions.LogXXX(ILogger, string?, params object?[]) -->
        <!-- TODO: Review whethere there's a better way of doing this that keeps the code readable -->
        <Rule Id="CA2254" Action="None"/>
    </Rules>
    <Rules AnalyzerId="StyleCop.Analyzers" RuleNamespace="StyleCop.Analyzers">
        <!-- SA1305 - ?? -->
        <Rule Id="SA1305" Action="Error"/>
        <!-- SA1412 - ?? -->
        <Rule Id="SA1412" Action="Error"/>
        <!-- SA1600 - ?? -->
        <Rule Id="SA1600" Action="None"/>
        <!-- SA1609 - ?? -->
        <Rule Id="SA1609" Action="Error"/>
    </Rules>
    <Rules AnalyzerId="SonarAnalyzer.CSharp" RuleNamespace="SonarAnalyzer.CSharp">
        <!-- S125 - Commented out code -->
        <Rule Id="S125" Action="None"/>
        <!-- S1066 Collapsible "if" statements should be merged -->
        <Rule Id="S1066" Action="None"/>
        <!-- S1075 - URIs should not be hardcoded -->
        <Rule Id="S1075" Action="None"/>
        <!-- S1118 - Utility classes should not have public constructors -->
        <Rule Id="S1118" Action="None"/>
        <!-- S1133 - Remove deprecated code -->
        <Rule Id="S1133" Action="Error"/>
        <!-- S1135 - Track uses of "TODO" tags -->
        <Rule Id="S1135" Action="Info"/>
        <!-- S1168 - Returning <code>null</code> instead of an actual array or collection forces callers of the method to explicitly test for nullity, making them more complex and less readable. -->
        <Rule Id="S1168" Action="None"/>
        <!-- S1172 - Remove Unused method parameter-->
        <Rule Id="S1172" Action="Error"/>
        <!-- S1450 - Private fields only used as local variables in methods should become local variables -->
        <Rule Id="S1450" Action="None"/>
        <!-- S1764 - Identical expressions should not be used on both sides of a binary operator -->
        <Rule Id="S1764" Action="None"/>
        <!-- S1854 - Dead stores should be removed -->
        <Rule Id="S1854" Action="None"/>
        <!-- S2190 - Add a way to break out of this methods recursion -->
        <Rule Id="S2190" Action="Error"/>
        <!-- S2326 - ?? -->
        <Rule Id="S2326" Action="None"/>
        <!-- S2344 - Enumeration type names should not have "Flags" or "Enum" suffixes -->
        <Rule Id="S2344" Action="Error"/>
        <!-- S2346 - Flags Enum should have an enum called 'None' with a value 0 -->
        <Rule Id="S2346" Action="None"/>
        <!-- S2365 - Properties should not copy collections -->
        <Rule Id="S2365" Action="Error"/>
        <!-- S2368 - Public methods should not have multidimensional array parameters -->
        <Rule Id="S2368" Action="None"/>
        <!-- S2583 - Conditionally executed blocks should be reachable -->
        <Rule Id="S2583" Action="Error"/>
        <!-- S2699 - Tests should include assertion -->
        <Rule Id="S2699" Action="None"/>
        <!-- S3063 - Remove this "StringBuilder"; ".ToString()" is never called. -->
        <Rule Id="S3063" Action="Error"/>
        <!-- S3218 - Inner class members should not shadow outer class "static" or type members -->
        <Rule Id="S3218" Action="None"/>
        <!-- S3442 - "abstract" classes should not have "public" constructors -->
        <Rule Id="S3442" Action="None"/>
        <!-- S3459 - Unassigned members should be removed -->
        <Rule Id="S3459" Action="None"/>
        <!-- S3925 - "ISerializable" should be implemented correctly -->
        <Rule Id="S3925" Action="None"/>
        <!-- S3963 - "static" fields should be initialized inline -->
        <Rule Id="S3963" Action="None"/>
        <!-- S4035 - Classes implementing "IEquatable<T>" should be sealed -->
        <Rule Id="S4035" Action="None"/>
        <!-- S4070 - Non-flags enums should not be marked with "FlagsAttribute" -->
        <Rule Id="S4070" Action="None"/>
        <!-- S4136 - Method overloads should be grouped together -->
        <Rule Id="S4136" Action="None"/>
        <!-- S4275 - Getters and setters should access the expected fields -->
        <Rule Id="S4275" Action="None"/>
        <!-- S4457 - Parameter validation in "async"/"await" methods should be wrapped -->
        <Rule Id="S4457" Action="None"/>
    </Rules>
    <Rules AnalyzerId="Roslynator.Analyzers" RuleNamespace="Roslynator.Analyzers">
        <!-- see  https://github.com/JosefPihrt/Roslynator/blob/master/src/Analyzers/README.md -->
        <!-- RCS1020 - Simplify Nullable<T> to T? -->
        <Rule Id="RCS1020" Action="Error"/>
        <!-- RCS1033 - Remove redundant boolean literal -->
        <Rule Id="RCS1033" Action="Error"/>
        <!-- RCS1038 - RemoveEmptyStatement -->
        <Rule Id="RCS1038" Action="Error"/>
        <!-- RCS1056 - Avoid usage of using alias directive -->
        <!-- TODO-->
        <Rule Id="RCS1056" Action="Info"/>
        <!-- RCS1060 - DeclareEachTypeInSeparateFile n.b. this is too agresssive as it wants Type and Type{T} to be in different files. -->
        <Rule Id="RCS1060" Action="Info"/>
        <!-- RCS1077 - Optimize Linq Method Call -->
        <Rule Id="RCS1077" Action="Error"/>
        <!-- RCS1080 - UseCountOrLengthPropertyInsteadOfAnyMethod -->
        <Rule Id="RCS1080" Action="Error"/>
        <!-- RCS1089 - Use ++ or \-\- instead of assignment -->
        <Rule Id="RCS1089" Action="Error"/>
        <!-- RCS1090 - AddCallToConfigureAwaitOrViceVersa -->
        <Rule Id="RCS1090" Action="None"/>
        <!-- RCS1091 - Remove empty region -->
        <Rule Id="RCS1091" Action="Error"/>
        <!-- RCS1093 - RemoveFileWithNoCode -->
        <Rule Id="RCS1093" Action="Error"/>
        <!-- RCS1097 - RemoveRedundantToStringCall -->
        <Rule Id="RCS1097" Action="Error"/>
        <!-- RCS1105 - Unnecessary interpolation -->
        <Rule Id="RCS1105" Action="Error"/>
        <!-- RCS1106 - Remove empty destructor -->
        <Rule Id="RCS1106" Action="Error"/>
        <!-- RCS1112 - Combine 'Enumerable.Where' method chain -->
        <Rule Id="RCS1112" Action="Error"/>
        <!-- RCS1118 - Mark local variable as const -->
        <Rule Id="RCS1118" Action="Error"/>
        <!-- RCS1126 - Add braces to if-else -->
        <Rule Id="RCS1126" Action="Error"/>
        <!-- RCS1134 - Remove redundant statement -->
        <Rule Id="RCS1134" Action="Error"/>
        <!-- RCS1136 - Merge switch sections with equivalent content -->
        <Rule Id="RCS1136" Action="Error"/>
        <!-- RCS1143 - Simplify coalesce expression -->
        <Rule Id="RCS1143" Action="Error"/>
        <!-- RCS1159 - Use EventHandler<T> -->
        <Rule Id="RCS1159" Action="Error"/>
        <!-- RCS1163 - Unused parameter -->
        <Rule Id="RCS1163" Action="None"/>
        <!-- RCS1168 - Parameter name differs from base name -->
        <Rule Id="RCS1168" Action="Error"/>
        <!-- RCS1170 - Use read-only auto-implemented property -->
        <Rule Id="RCS1170" Action="Error"/>
        <!-- RCS1171 - Simplify lazy initialization -->
        <Rule Id="RCS1171" Action="Error"/>
        <!-- RCS1080 - Use 'Count/Length' property instead of 'Any' method -->
        <Rule Id="RCS1080" Action="Error"/>
        <!-- RCS1197 - OptimizeStringBuilderAppendCall -->
        <Rule Id="RCS1197" Action="Error"/>
        <!-- RCS1198 - Avoid unnecessary boxing of value type -->
        <Rule Id="RCS1198" Action="None"/>
        <!-- RCS1214 - Unnecessary interpolated string -->
        <Rule Id="RCS1214" Action="Error"/>
        <!-- RCS1217 - Convert interpolated string to concatenation -->
        <Rule Id="RCS1217" Action="Error"/>
        <!-- RCS1220 - Use pattern matching instead of combination of 'is' operator and cast operator -->
        <Rule Id="RCS1220" Action="Error"/>
        <!-- RCS1221 - Use pattern matching instead of combination of 'as' operator and null check -->
        <Rule Id="RCS1221" Action="Error"/>
        <!-- RCS1231 - Make parameter ref read-only -->
        <!-- TODO - make an error -->
        <Rule Id="RCS1231" Action="Error"/>
        <!-- RCS1233 - Use short-circuiting operator -->
        <Rule Id="RCS1233" Action="Error"/>
        <!-- RCS1234 - Duplicate enum value -->
        <Rule Id="RCS1234" Action="Error"/>
        <!-- RCS1235 - Optimize method call -->
        <Rule Id="RCS1235" Action="Error"/>
        <!-- RCS1238 - Avoid nested ?: operators -->
        <Rule Id="RCS1238" Action="Error"/>
        <!-- RCS1240 - Operator is unnecessary -->
        <Rule Id="RCS1240" Action="Error"/>
        <!-- RCS1242 - Do not pass non-read-only struct by read-only reference -->
        <Rule Id="RCS1242" Action="Error"/>
    </Rules>
    <Rules AnalyzerId="codecracker.CSharp" RuleNamespace="codecracker.CSharp">
        <!-- See https://code-cracker.github.io/diagnostics.html -->
        <!-- CC0001 - Use var instead of specifying type name -->
        <Rule Id="CC0001" Action="None"/>
        <!-- CC0021 - use nameof(X) rather than "X" -->
        <Rule Id="CC0021" Action="None"/>
        <!-- CC0022 - X should be disposed -->
        <Rule Id="CC0022" Action="None"/>
        <!-- CC0031 - Validate delegates for null before using -->
        <Rule Id="CC0031" Action="None"/>
        <!-- CC0057 - Review unused parameters -->
        <Rule Id="CC0057" Action="None"/>
        <!-- CC0105 - Use var instead of specifying type name -->
        <Rule Id="CC0105" Action="None"/>
    </Rules>
    <Rules AnalyzerId="SmartAnalyzers.CSharpExtensions.Annotations"
           RuleNamespace="SmartAnalyzers.CSharpExtensions.Annotations">
        <!-- See https://github.com/cezarypiatek/CSharpExtensions -->
        <!-- CSE001 - Required properties initialization -->
        <Rule Id="CSE001" Action="Error" />
        <!-- CSE002 - InitOnly member modification -->
        <Rule Id="CSE002" Action="Error" />
        <!-- CSE003 - Type should have the same fields as twin type -->
        <Rule Id="CSE003" Action="Error" />
        <!-- CSE004 - Member with InitOnlyOptional requires default value -->
        <Rule Id="CSE004" Action="Error" />
        <!-- CSE005 - Use the return value or discard it explicitly -->
        <Rule Id="CSE005" Action="Info"/>
        <!-- CSE006 - Expression too complex -->
        <Rule Id="CSE006" Action="Info" />
        <!-- CSE007 - Return disposable value unused -->
        <Rule Id="CSE007" Action="Error" />
        <!-- CSE008 - Return async result unused -->
        <Rule Id="CSE008" Action="Error" />
        <!-- CSE009 - Task variable not awaited -->
        <Rule Id="CSE009" Action="Error" />
    </Rules>
    <Rules AnalyzerId="Meziantou.Analyzer" RuleNamespace="Meziantou.Analyzer">
        <!-- See https://github.com/meziantou/Meziantou.Analyzer/tree/main/docs -->
        <!-- MA0001	- StringComparison is missing	information_source -->
        <Rule Id="MA0001" Action="Error"/>
        <!-- MA0002 - IEqualityComparer<string> or IComparer<string> is missing	warning	-->
        <Rule Id="MA0002" Action="Error"/>
        <!-- MA0003	-Add parameter name to improve readability -->
        <Rule Id="MA0003" Action="None"/>
        <!-- MA0004 - Use ConfigureAwait(false) as the current SynchronizationContext is not needed -->
        <Rule Id="MA0004" Action="None"/>
        <!-- MA0005 - Use Array.Empty<T>() -->
        <Rule Id="MA0005" Action="Error"/>
        <!-- MA0006 - Use string.Equals instead of the comparison operator -->
        <Rule Id="MA0006" Action="Info"/>
        <!-- MA0007	- Add a comma after the last value -->
        <Rule Id="MA0007" Action="None"/>
        <!-- MA0008	- Add StructLayoutAttribute -->
        <Rule Id="MA0008" Action="Error"/>
        <!-- MA0009	- Add regex evaluation timeout -->
        <Rule Id="MA0009" Action="Error"/>
        <!-- MA0010	- Mark attributes with AttributeUsageAttribute -->
        <Rule Id="MA0010" Action="Error"/>
        <!-- MA0011	- IFormatProvider is missing -->
        <Rule Id="MA0011" Action="Error"/>
        <!-- MA0012	- Do not raise reserved exception type -->
        <Rule Id="MA0012" Action="Error"/>
        <!-- MA0013	- Types should not extend System.ApplicationException -->
        <Rule Id="MA0013" Action="Error"/>
        <!-- MA0014	- Do not raise System.ApplicationException -->
        <Rule Id="MA0014" Action="Error"/>
        <!-- MA0015	- Specify the parameter name in ArgumentException -->
        <Rule Id="MA0015" Action="Error"/>
        <!-- MA0016 - Prefer using collection abstraction instead of implementation -->
        <Rule Id="MA0016" Action="Info"/>
        <!-- MA0017	- Abstract types should not have public or internal constructors -->
        <Rule Id="MA0017" Action="Error"/>
        <!-- MA0018	- Do not declare static members on generic types -->
        <Rule Id="MA0018" Action="Error"/>
        <!-- MA0019	- Use EventArgs.Empty	warning	heavy_check_mark -->
        <Rule Id="MA0019" Action="Error"/>
        <!-- MA0020	- Use direct methods instead of LINQ methods -->
        <Rule Id="MA0020" Action="Error"/>
        <!-- MA0021	- Use StringComparer.GetHashCode instead of string.GetHashCode -->
        <Rule Id="MA0021" Action="Error"/>
        <!-- MA0022	- Return Task.FromResult instead of returning null -->
        <Rule Id="MA0022" Action="Error"/>
        <!-- MA0023	- Add RegexOptions.ExplicitCapture -->
        <Rule Id="MA0023" Action="Error"/>
        <!-- MA0024	- Use an explicit StringComparer when possible -->
        <Rule Id="MA0024" Action="Error"/>
        <!-- MA0025	- Implement the functionality instead of throwing NotImplementedException -->
        <Rule Id="MA0025" Action="Error"/>
        <!-- MA0026 - Don't leave TODO's scattered around -->
        <Rule Id="MA0026" Action="Info"/>
        <!-- MA0027 - Prefer rethrowing an exception implicitly -->
        <Rule Id="MA0027" Action="Error"/>
        <!-- MA0028 - Optimize StringBuilder usage -->
        <Rule Id="MA0028" Action="Error"/>
        <!-- MA0029 - Combine LINQ methods -->
        <Rule Id="MA0029" Action="Error"/>
        <!-- MA0030 - Remove useless OrderBy call -->
        <Rule Id="MA0030" Action="Error"/>
        <!-- MA0031 - Optimize Enumerable.Count() usage -->
        <Rule Id="MA0031" Action="Error"/>
        <!-- MA0032 - Use an overload with a CancellationToken argument -->
        <Rule Id="MA0032" Action="Error"/>
        <!-- MA0033 - Do not tag instance fields with ThreadStaticAttribute -->
        <Rule Id="MA0033" Action="Error"/>
        <!-- MA0035 - Do not use dangerous threading methods -->
        <Rule Id="MA0035" Action="Error"/>
        <!-- MA0036 - Make class static -->
        <Rule Id="MA0036" Action="Error"/>
        <!-- MA0037 - Remove empty statement -->
        <Rule Id="MA0037" Action="Error"/>
        <!-- MA0038 - Make method static -->
        <Rule Id="MA0038" Action="None"/>
        <!-- MA0039 - Do not write your own certificate validation method -->
        <Rule Id="MA0039" Action="Error"/>
        <!-- MA0040 - Forward the CancellationToken parameter to methods that take one -->
        <Rule Id="MA0040" Action="Error"/>
        <!-- MA0041 - Make property static -->
        <Rule Id="MA0041" Action="None"/>
        <!-- MA0042 - Do not use blocking calls in an async method -->
        <Rule Id="MA0042" Action="Error"/>
        <!-- MA0043 - Use nameof operator in ArgumentException -->
        <Rule Id="MA0043" Action="Error"/>
        <!-- MA0044 - Remove useless ToString call -->
        <Rule Id="MA0044" Action="Error"/>
        <!-- MA0045 - Do not use blocking calls in a sync method (need to make calling method async) -->
        <Rule Id="MA0045" Action="Error"/>
        <!-- MA0046 - Use EventHandler<T> to declare events -->
        <Rule Id="MA0046" Action="Error"/>
        <!-- MA0047 - Declare types in namespaces -->
        <Rule Id="MA0047" Action="Error"/>
        <!-- MA0048 - File name must match type name -->
        <Rule Id="MA0048" Action="Error"/>
        <!-- MA0049 - Type name should not match containing namespace -->
        <Rule Id="MA0049" Action="Error"/>
        <!-- MA0050 - Validate arguments correctly in iterator methods -->
        <Rule Id="MA0050" Action="Error"/>
        <!-- MA0051 - Method is too long -->
        <Rule Id="MA0051" Action="Error"/>
        <!-- MA0052 - Replace constant Enum.ToString with nameof -->
        <Rule Id="MA0052" Action="Error"/>
        <!-- MA0053 - Make class sealed -->
        <Rule Id="MA0053" Action="Error"/>
        <!-- MA0054 - Embed the caught exception as innerException -->
        <Rule Id="MA0054" Action="Error"/>
        <!-- MA0055 - Do not use finalizer -->
        <Rule Id="MA0055" Action="Error"/>
        <!-- MA0056 - Do not call overridable members in constructor -->
        <Rule Id="MA0056" Action="Error"/>
        <!-- MA0057 - Class name should end with 'Attribute' -->
        <Rule Id="MA0057" Action="Error"/>
        <!-- MA0058 - Class name should end with 'Exception' -->
        <Rule Id="MA0058" Action="Error"/>
        <!-- MA0059 - Class name should end with 'EventArgs' -->
        <Rule Id="MA0059" Action="Error"/>
        <!-- MA0060 - The value returned by Stream.Read/Stream.ReadAsync is not used -->
        <Rule Id="MA0060" Action="Error"/>
        <!-- MA0061 - Method overrides should not change default values -->
        <Rule Id="MA0061" Action="Error"/>
        <!-- MA0062 - Non-flags enums should not be marked with "FlagsAttribute" -->
        <Rule Id="MA0062" Action="Error"/>
        <!-- MA0063 - Use Where before OrderBy -->
        <Rule Id="MA0063" Action="Error"/>
        <!-- MA0064 - Avoid locking on publicly accessible instance -->
        <Rule Id="MA0064" Action="Error"/>
        <!-- MA0065 - Default ValueType.Equals or HashCode is used for struct equality -->
        <Rule Id="MA0065" Action="Error"/>
        <!-- MA0066 - Hash table unfriendly type is used in a hash table -->
        <Rule Id="MA0066" Action="Error"/>
        <!-- MA0067 - Use Guid.Empty -->
        <Rule Id="MA0067" Action="Error"/>
        <!-- MA0068 - Invalid parameter name for nullable attribute -->
        <Rule Id="MA0068" Action="Error"/>
        <!-- MA0069 - Non-constant static fields should not be visible -->
        <Rule Id="MA0069" Action="Error"/>
        <!-- MA0070 - Obsolete attributes should include explanations -->
        <Rule Id="MA0070" Action="Error"/>
        <!-- MA0071 - Avoid using redundant else -->
        <Rule Id="MA0071" Action="Error"/>
        <!-- MA0072 - Do not throw from a finally block -->
        <Rule Id="MA0072" Action="Error"/>
        <!-- MA0073 - Avoid comparison with bool constant -->
        <Rule Id="MA0073" Action="Error"/>
        <!-- MA0074 - Avoid implicit culture-sensitive methods -->
        <Rule Id="MA0074" Action="Error"/>
        <!-- MA0075 - Do not use implicit culture-sensitive ToString -->
        <Rule Id="MA0075" Action="Error"/>
        <!-- MA0076 - Do not use implicit culture-sensitive ToString in interpolated strings -->
        <Rule Id="MA0076" Action="None"/>
        <!-- MA0077 - A class that provides Equals(T) should implement IEquatable<T> -->
        <Rule Id="MA0077" Action="Error"/>
        <!-- MA0078 - Use 'Cast' instead of 'Select' to cast -->
        <Rule Id="MA0078" Action="Error"/>
        <!-- MA0079 - Forward the CancellationToken using .WithCancellation() -->
        <Rule Id="MA0079" Action="Error"/>
        <!-- MA0080 - Use a cancellation token using .WithCancellation() -->
        <Rule Id="MA0080" Action="Error"/>
        <!-- MA0081 - Method overrides should not omit params keyword -->
        <Rule Id="MA0081" Action="Error"/>
        <!-- MA0082 - NaN should not be used in comparisons -->
        <Rule Id="MA0082" Action="Error"/>
        <!-- MA0083 - ConstructorArgument parameters should exist in constructors -->
        <Rule Id="MA0083" Action="Error"/>
        <!-- MA0084 - Local variables should not hide other symbols -->
        <Rule Id="MA0084" Action="Error"/>
        <!-- MA0085 - Anonymous delegates should not be used to unsubscribe from Events -->
        <Rule Id="MA0085" Action="Error"/>
        <!-- MA0086 - Do not throw from a finalizer -->
        <Rule Id="MA0086" Action="Error"/>
        <!-- MA0087 - Parameters with [DefaultParameterValue] attributes should also be marked [Optional] -->
        <Rule Id="MA0087" Action="Error"/>
        <!-- MA0088 - Use [DefaultParameterValue] instead of [DefaultValue] -->
        <Rule Id="MA0088" Action="Error"/>
        <!-- MA0089 - Optimize string method usage -->
        <Rule Id="MA0089" Action="Error"/>
        <!-- MA0090 - Remove empty else/finally block	information_source -->
        <Rule Id="MA0090" Action="Error"/>
        <!-- MA0091 - Sender should be 'this' for instance events -->
        <Rule Id="MA0091" Action="Error"/>
        <!-- MA0092 - Sender should be 'null' for static events -->
        <Rule Id="MA0092" Action="Error"/>
        <!-- MA0093 - EventArgs should not be null -->
        <Rule Id="MA0093" Action="Error"/>
        <!-- MA0094 - A class that provides CompareTo(T) should implement IComparable<T> -->
        <Rule Id="MA0094" Action="Error"/>
        <!-- MA0095 - A class that implements IEquatable<T> should override Equals(object) -->
        <Rule Id="MA0095" Action="Error"/>
        <!-- MA0096 - A class that implements IComparable<T> should also implement IEquatable<T> -->
        <Rule Id="MA0096" Action="Error"/>
        <!-- MA0097 - A class that implements IComparable<T> or IComparable should override comparison operators -->
        <Rule Id="MA0097" Action="Error"/>
        <!-- MA0098 - Use indexer instead of LINQ methods	information_source -->
        <Rule Id="MA0098" Action="Error"/>
        <!-- MA0099 - Use Explicit enum value instead of 0 -->
        <Rule Id="MA0099" Action="Error"/>
        <!-- MA0100 - Await task before disposing of resources -->
        <Rule Id="MA0100" Action="Error"/>
        <!-- MA0101 - String contains an implicit end of line character -->
        <Rule Id="MA0101" Action="None"/>
        <!-- MA0102 - Make member readonly -->
        <Rule Id="MA0102" Action="Error"/>
        <!-- MA0103 - Use SequenceEqual instead of equality operator -->
        <Rule Id="MA0103" Action="Error"/>
        <!-- MA0104 - Do not create a type with a name from the BCL -->
        <Rule Id="MA0104" Action="Error"/>
        <!-- MA0105 - Use the lambda parameters instead of using a closure -->
        <Rule Id="MA0105" Action="Error"/>
        <!-- MA0106 - Avoid closure by using an overload with the 'factoryArgument' parameter -->
        <Rule Id="MA0106" Action="Error"/>
        <!-- MA0107 - Do not use culture-sensitive object.ToString -->
        <Rule Id="MA0107" Action="None"/>
        <!-- MA0108 - Remove redundant argument value -->
        <Rule Id="MA0108" Action="Error"/>
        <!-- MA0109 - Consider adding an overload with a Span<T> or Memory<T> -->
        <Rule Id="MA0109" Action="Error"/>
        <!-- MA0110 - Use the Regex source generator -->
        <Rule Id="MA0110" Action="Error"/>
        <!-- MA0111 - Use string.Create instead of FormattableString -->
        <Rule Id="MA0111" Action="Error"/>
        <!-- MA0112 - Use 'Count > 0' instead of 'Any()' -->
        <Rule Id="MA0112" Action="Error"/>
        <!-- MA0113 - Use DateTime.UnixEpoch -->
        <Rule Id="MA0113" Action="Error"/>
        <!-- MA0114 - Use DateTimeOffset.UnixEpoch -->
        <Rule Id="MA0114" Action="Error"/>
        <!-- MA0115 - Unknown component parameter -->
        <Rule Id="MA0115" Action="Error"/>
        <!-- MA0116 - Parameters with [SupplyParameterFromQuery] attributes should also be marked as [Parameter] -->
        <Rule Id="MA0116" Action="Error"/>
        <!-- MA0117 - Parameters with [EditorRequired] attributes should also be marked as [Parameter] -->
        <Rule Id="MA0117" Action="Error"/>
        <!-- MA0118 - [JSInvokable] methods must be public -->
        <Rule Id="MA0118" Action="Error"/>
        <!-- MA0119 - JSRuntime must not be used in OnInitialized or OnInitializedAsync -->
        <Rule Id="MA0119" Action="Error"/>
        <!-- MA0120 - Use InvokeVoidAsync when the returned value is not used -->
        <Rule Id="MA0120" Action="Error"/>
        <!-- MA0121 - Do not overwrite parameter value -->
        <Rule Id="MA0121" Action="Error"/>
        <!-- MA0122 - Parameters with [SupplyParameterFromQuery] attributes are only valid in routable components (@page) -->
        <Rule Id="MA0122" Action="Error"/>
        <!-- MA0123 - Sequence number must be a constant -->
        <Rule Id="MA0123" Action="Error"/>
        <!-- MA0124 - Log Parameter type is not valid -->
        <Rule Id="MA0124" Action="Error"/>
        <!-- MA0125 - The list of log parameter types contains an invalid type -->
        <Rule Id="MA0125" Action="Error"/>
        <!-- MA0126 - The list of log parameter types contains a duplicate -->
        <Rule Id="MA0126" Action="Error"/>
        <!-- MA0127 - Use String.Equals instead of is pattern -->
        <Rule Id="MA0127" Action="Error"/>
        <!-- MA0128 - Use 'is' operator instead of SequenceEqual -->
        <Rule Id="MA0128" Action="Error"/>
    </Rules>
    <Rules AnalyzerId="Philips.CodeAnalysis.DuplicateCodeAnalyzer" RuleNamespace="Philips.CodeAnalysis.DuplicateCodeAnalyzer">
        <!-- See https://github.com/philips-software/roslyn-analyzers/blob/master/Philips.CodeAnalysis.DuplicateCodeAnalyzer/Philips.CodeAnalysis.DuplicateCodeAnalyzer.md -->
        <!-- TODO -->
    </Rules>
    <Rules AnalyzerId="Philips.CodeAnalysis.MaintainabilityAnalyzers" RuleNamespace="Philips.CodeAnalysis.MaintainabilityAnalyzers">
        <!-- See https://github.com/philips-software/roslyn-analyzers/blob/master/Philips.CodeAnalysis.MaintainabilityAnalyzers/Philips.CodeAnalysis.MaintainabilityAnalyzers.md -->
        <!-- PH2001	- Avoid empty XML Summary comments -->
        <Rule Id="PH2001" Action="Error"/>
        <!-- PH2006	- Match namespace, path, assembly, and project -->
        <Rule Id="PH2006" Action="None"/>
        <!-- PH2020	- Avoid Thread.Sleep -->
        <Rule Id="PH2020" Action="Error"/>
        <!-- PH2021	- Avoid inline new -->
        <Rule Id="PH2021" Action="None"/>
        <!-- PH2026	- Avoid SuppressMessage attribute -->
        <Rule Id="PH2026" Action="None"/>
        <!-- PH2027	- Avoid static methods -->
        <Rule Id="PH2027" Action="None"/>
        <!-- PH2028 - File should start with a copyright statement -->
        <Rule Id="PH2028" Action="None"/>
        <!-- PH2029	- Avoid #pragma -->
        <Rule Id="PH2029" Action="None"/>
        <!-- PH2030 - Variable naming conventions -->
        <Rule Id="PH2030" Action="None"/>
        <!-- PH2031	- Avoid TryParse without Culture -->
        <Rule Id="PH2031" Action="Error"/>
        <!-- PH2032	- Avoid Empty Type Initializer -->
        <Rule Id="PH2032" Action="Error"/>
        <!-- PH2040	- ServiceContracts have InterfaceContracts -->
        <Rule Id="PH2040" Action="None"/>
        <!-- PH2042	- WinForms InitalizeComponent-->
        <Rule Id="PH2042" Action="None"/>
        <!-- PH2044	- Avoid dynamic keyword -->
        <Rule Id="PH2044" Action="Error"/>
        <!-- PH2045	- Avoid static classes -->
        <Rule Id="PH2045" Action="None"/>
        <!-- PH2047	- Avoid public member variables -->
        <Rule Id="PH2047" Action="Error"/>
        <!-- PH2051	- Avoid unnecessary range checks -->
        <Rule Id="PH2051" Action="Error"/>
        <!-- PH2060	- Bool naming conventions -->
        <Rule Id="PH2060" Action="None"/>
        <!-- PH2061	Public/Private #regions -->
        <Rule Id="PH2061" Action="None"/>
        <!-- PH2064	- Avoid duplicate #regions -->
        <Rule Id="PH2064" Action="Error"/>
        <!-- PH2066	- Readonly lock -->
        <Rule Id="PH2066" Action="Error"/>
        <!-- PH2067	- Avoid nested string.Format -->
        <Rule Id="PH2067" Action="None"/>
        <!-- PH2073	- Call extension method as instance -->
        <Rule Id="PH2073" Action="Error"/>
        <!-- PH2068	- Avoid goto -->
        <Rule Id="PH2068" Action="Error"/>
        <!-- PH2069	- Avoid unnecessary string.Format -->
        <Rule Id="PH2069" Action="Error"/>
        <!-- PH2070	- Avoid protected fields -->
        <Rule Id="PH2070" Action="None"/>
        <!-- PH2072	- Require local editorconfig -->
        <Rule Id="PH2072" Action="None"/>
        <!-- PH2073	- Call extension method as instance -->
        <Rule Id="PH2073" Action="Error"/>
        <!-- PH2074	- Avoid register in Dispose-->
        <Rule Id="PH2074" Action="Error"/>
        <!-- PH2075	- Avoid AssemblyVersion change -->
        <Rule Id="PH2075" Action="None"/>
        <!-- PH2077	- Avoid Switch statement with no cases -->
        <Rule Id="PH2077" Action="None"/>
        <!-- PH2078	- Avoid PrivateKey Property -->
        <Rule Id="PH2078" Action="Error"/>
        <!-- PH2079	- Namespace prefix -->
        <Rule Id="PH2079" Action="None"/>
        <!-- PH2080	- Avoid hardcoded absolute paths -->
        <Rule Id="PH2080" Action="Error"/>
        <!-- PH2081	- Avoid #regions within methods -->
        <Rule Id="PH2081" Action="Error"/>
        <!-- PH2082	- Positive naming -->
        <Rule Id="PH2082" Action="None"/>
        <!-- PH2083	- Avoid Pass By Reference -->
        <Rule Id="PH2083" Action="Error"/>
        <!-- PH2084	- Don't lock on "new x()" -->
        <Rule Id="PH2084" Action="Error"/>
        <!-- PH2085	- Order property accessors -->
        <Rule Id="PH2085" Action="None"/>
        <!-- PH2086	- Avoid calling Task.Result -->
        <Rule Id="PH2086" Action="None"/>
        <!-- PH2087	- Do not use spaces in filenames -->
        <Rule Id="PH2087" Action="Error"/>
        <!-- PH2088 - Paths should not exceed 260 characters -->
        <Rule Id="PH2088" Action="None"/>
        <!-- PH2089 - Avoid assignments in conditions -->
        <Rule Id="PH2089" Action="Error"/>
        <!-- PH2090 - Log Exception -->
        <Rule Id="PH2090" Action="None"/>
        <!-- PH2091	- Throw Inner Exception -->
        <Rule Id="PH2091" Action="Error"/>
        <!-- PH2092	- Limit Condition Complexity -->
        <Rule Id="PH2092" Action="Error"/>
        <!-- PH2093	- Prefer creating tuples with named fields -->
        <Rule Id="PH2093" Action="Error"/>
        <!-- PH2094	- Prefer using the named tuple field, not ItemX -->
        <Rule Id="PH2094" Action="Error"/>
        <!-- PH2096	- Prefer async Task methods over async void methods -->
        <Rule Id="PH2096" Action="None"/>
        <!-- PH2097	- Avoid Empty Statement Blocks -->
        <Rule Id="PH2097" Action="None"/>
        <!-- PH2098	- Avoid Empty Catch Block -->
        <Rule Id="PH2098" Action="None"/>
        <!-- PH2099	- Enforce FileVersion to be same as PackageVersion -->
        <Rule Id="PH2099" Action="None"/>
        <!-- PH2101	- Detect Null Dereference after "as" -->
        <Rule Id="PH2101" Action="Error"/>
    </Rules>
    <Rules AnalyzerId="SecurityCodeScan.VS2019" RuleNamespace="SecurityCodeScan.VS2019">
        <!-- SCS0019 - Controller method is potentionally Vulnerable to Cross Site Request Forgery CSRF -->
        <Rule Id="SCS0019" Action="Error"/>
    </Rules>
    <Rules AnalyzerId="FunFair.CodeAnalysis" RuleNamespace="FunFair.CodeAnalysis">
        <!-- See https://github.com/funfair-tech/funfair-server-code-analysis -->
        <!-- FFS0001 - Avoid using DateTime.Now - Use IDateTimeSource.UtcNow() -->
        <Rule Id="FFS0001" Action="Error"/>
        <!-- FFS0002 - Avoid using DateTime.UtcNow - Use IDateTimeSource.UtcNow() -->
        <Rule Id="FFS0002" Action="Error"/>
        <!-- FFS0003 - Avoid using DateTime.Today - Use IDateTimeSource.UtcNow().Date -->
        <Rule Id="FFS0003" Action="Error"/>
        <!-- FFS0004 - Avoid using DateTimeOffset.Now - Use IDateTimeSource.UtcNow() -->
        <Rule Id="FFS0004" Action="Error"/>
        <!-- FFS0005 - Avoid using DateTimeOffset.UtcNow - Use IDateTimeSource.UtcNow() -->
        <Rule Id="FFS0005" Action="Error"/>
        <!-- FFS0006 - Avoid using arbitrary SQL for updates -->
        <Rule Id="FFS0006" Action="Error"/>
        <!-- FFS0007 - Avoid using arbitrary SQL for queries -->
        <Rule Id="FFS0007" Action="Error"/>
        <!-- FFS0008 - Do not disable warnings -->
        <Rule Id="FFS0008" Action="Error"/>
        <!-- FFS0009 - Do not use Assert.True without specifying a message -->
        <Rule Id="FFS0009" Action="Error"/>
        <!-- FFS0010 - Do not use Assert.False without specifying a message -->
        <Rule Id="FFS0010" Action="Error"/>
        <!-- FFS0011 - Make structs readonly -->
        <Rule Id="FFS0011" Action="Error"/>
        <!-- FFS0012 - Classes should be static, sealed or abstract -->
        <Rule Id="FFS0012" Action="Error"/>
        <!-- FFS0013 - Test Classes should be sealed or abstract and derived from TestBase -->
        <Rule Id="FFS0013" Action="Error"/>
        <!-- FFS0014 - Do not use JsonSerialiser without specifying JsonOptions -->
        <Rule Id="FFS0014" Action="Error"/>
        <!-- FFS0015 - Do not use JsonDeserialiser without specifying JsonOptions -->
        <Rule Id="FFS0015" Action="Error"/>
        <!-- FFS0016 - Pass parameter name to ArgumentExceptions -->
        <Rule Id="FFS0016" Action="Error"/>
        <!-- FFS0017 - Pass inner exception to exceptions thrown in catch block -->
        <Rule Id="FFS0017" Action="Error"/>
        <!-- FFS0018 - Don't use NSubstitute's Received() without specifying the number of calls -->
        <Rule Id="FFS0018" Action="Error"/>
        <!-- FFS0019 - ILogger parameters should be called logger -->
        <Rule Id="FFS0019" Action="Error"/>
        <!-- FFS0020 - Parameters should be in a specified order -->
        <Rule Id="FFS0020" Action="Error"/>
        <!-- FFS0021 - Don't use NSubstitute's Received(0) - use DidNotReceive() instead -->
        <Rule Id="FFS0021" Action="Error"/>
        <!-- FFS0022 - Don't configure nullable in code - should be a project level. -->
        <Rule Id="FFS0022" Action="Error"/>
        <!-- FFS0023 - Logger parameters on base classes should be ILogger not ILogger<ClassName> -->
        <Rule Id="FFS0023" Action="Error"/>
        <!-- FFS0024 - Logger parameters on leaf classes should be ILogger<ClassName> not ILogger -->
        <Rule Id="FFS0024" Action="Error"/>
        <!-- FFS0025 - Mismatch of generic type -->
        <Rule Id="FFS0025" Action="Error"/>
        <!-- FFS0026 - Do not read IPAddress from Connection - use an abstraction -->
        <Rule Id="FFS0026" Action="Error"/>
        <!-- FFS0027 - SuppressMessage must specify a justification -->
        <Rule Id="FFS0027" Action="Error"/>
        <!-- FFS0028 - Records should be sealed -->
        <Rule Id="FFS0028" Action="Error"/>
        <!-- FFS0029 - Classes derived from MockBase<T> should be internal -->
        <Rule Id="FFS0029" Action="Error"/>
        <!-- FFS0030 - Classes derived from MockBase<T> should be sealed -->
        <Rule Id="FFS0030" Action="Error"/>
        <!-- FFS0031 - Avoid using System.Collections.Concurrent.ConcurrentDictionary<,> - Use NonBlocking.ConcurrentDictionary<,> -->
        <Rule Id="FFS0031" Action="Error"/>
        <!-- FFS0032 - Avoid using NonBlocing.ConcurrentDictionary<,>.AddOrUpdate - Use FunFair.Common.Extensions.ConcurrentDictionaryExtensions.AddOrUpdate -->
        <Rule Id="FFS0032" Action="Error"/>
        <!-- FFS0033 - Avoid using NonBlocing.ConcurrentDictionary<,>.GetOrAdd - Use FunFair.Common.Extensions.ConcurrentDictionaryExtensions.GetOrAdd -->
        <Rule Id="FFS0033" Action="Error"/>
        <!-- FFS0034 - Avoid using Microsoft.Extensions.Configuration.ConfigurationBuilder.AddJsonFile with reload set to true -->
        <Rule Id="FFS0034" Action="Error"/>
        <!-- FFS0035 - Checks that test classes do not define mutable fields -->
        <Rule Id="FFS0035" Action="Error"/>
        <!-- FFS0036 - Checks that test classes do not define mutable properties -->
        <Rule Id="FFS0036" Action="Error"/>
        <!-- FFS0037 - Checks that Guid.Parse is not used and that new Guid or Guid.TryParse is used instead -->
        <Rule Id="FFS0037" Action="Error"/>
        <!-- FFS0038 - Records should have DebuggerDisplay attribute on them. -->
        <Rule Id="FFS0038" Action="Error"/>
        <!-- FFS0039 - Only one type should be defined per file. (note class T and class T{T1} are considered ok)  -->
        <Rule Id="FFS0039" Action="Error"/>
        <!-- FFS0040 - File should have the same name as the type that is defined in it -->
        <Rule Id="FFS0040" Action="Info"/>
        <!-- FFS0041 - Do not use System.Console in test assemblies -->
        <Rule Id="FFS0041" Action="Error"/>
        <!-- FFS0042 - Do not have TODO's in SuppressMessage justifications. -->
        <Rule Id="FFS0042" Action="Info"/>
    </Rules>
</RuleSet>